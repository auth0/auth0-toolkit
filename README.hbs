<h3 align="center">auth0-toolkit</h3>
<p align="center">CLI toolkit for common scripts for JS/TS Auth0 projects</p>

---

Inspired by ["Tools without config"](https://blog.kentcdodds.com/automation-without-config-412ab5e47229), ["The Melting Pot of JavaScript"](https://youtu.be/G39lKaONAlA), and [kcd-scripts](https://github.com/kentcdodds/kcd-scripts).

<!-- START doctoc -->
<!-- END doctoc -->

## Usage

1. Create a project:
   - `npm init new-auth0-project`
   - If it's a TypeScript project: add `types` into `package.json`. For example:
     - `{ "types": "lib/index" }`
1. Install auth-toolkit:
   - `npm install --save-dev auth0-toolkit`
1. Run the initialization script:
   - `npx auth0-toolkit init`
1. Use included scripts:
   - `npm run build -- --watch`
   - `npm run build:doc`
   - `npm run validate`
   - `npm run format`
   - `npm run lint`
   - ... etc.

# Configuration

This toolkit exposes a bin called `auth0-toolkit`. All scripts are stored in `lib/scripts` and all configuration files are stored in `lib/config`.

The toolkit determines whether a project is a TypeScript project or JavaScript project depending on whether the `types`
property exists in `package.json`.

All included tools can have their configuration overwritten by adding flags to the command or by including configuration files in the root of your project. For example: running `auth0-toolkit format` will run Prettier with the included configuration, but having a `.prettierrc` in your project will cause the toolkit to use that configuration instead.

## Overriding Configuration

During the toolkit setup process, configuration files for the libraries used by the toolkit are created in the project root. Libraries natively supporting an "extend" feature will use those by default to allow for toolkit configuration to be used as a starting point.

All configuration can be overridden with configuration files, `package.json` properties, or arguments passed to the toolkit binary.

# API

{{>main}}

# Author

[Auth0](auth0.com)

# License

This project is licensed under the MIT license. See the [LICENSE](LICENSE) file for more info.
